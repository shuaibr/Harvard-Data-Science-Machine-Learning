> p <- 0.9
> n <- length(test_index)
> n
[1] 525
> y_hat <- sample(c("Male", "Female"), n, replace = TRUE, prob=c(p, 1-p)) %>% 
+     factor(levels = levels(test_set$sex))
> mean(y_hat == test_set$sex)
[1] 0.7066667
> probs <- seq(0, 1, length.out = 10)
> guessing <- map_df(probs, function(p){
+     y_hat <- 
+         sample(c("Male", "Female"), n, replace = TRUE, prob=c(p, 1-p)) %>% 
+         factor(levels = c("Female", "Male"))
+     list(method = "Guessing",
+          FPR = 1 - specificity(y_hat, test_set$sex),
+          TPR = sensitivity(y_hat, test_set$sex))
+ })
> guessing %>% qplot(FPR, TPR, data =., xlab = "1 - Specificity", ylab = "Sensitivity")
> cutoffs <- c(50, seq(60, 75), 80)
> height_cutoff <- map_df(cutoffs, function(x){
+     y_hat <- ifelse(test_set$height > x, "Male", "Female") %>% 
+         factor(levels = c("Female", "Male"))
+     list(method = "Height cutoff",
+          FPR = 1-specificity(y_hat, test_set$sex),
+          TPR = sensitivity(y_hat, test_set$sex))
+ })
> bind_rows(guessing, height_cutoff) %>%
+     ggplot(aes(FPR, TPR, color = method)) +
+     geom_line() +
+     geom_point() +
+     xlab("1 - Specificity") +
+     ylab("Sensitivity")
> library(ggrepel)
Error in library(ggrepel) : there is no package called ‘ggrepel’
> install.packages("ggrepel")
Installing package into ‘C:/Users/ShuaibReeyaz/Documents/R/win-library/3.6’
(as ‘lib’ is unspecified)
trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/ggrepel_0.8.2.zip'
Content type 'application/zip' length 1154110 bytes (1.1 MB)
downloaded 1.1 MB

package ‘ggrepel’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\ShuaibReeyaz\AppData\Local\Temp\RtmpktuEbc\downloaded_packages
> library(ggrepel)
Warning message:
package ‘ggrepel’ was built under R version 3.6.3 
> map_df(cutoffs, function(x){
+     y_hat <- ifelse(test_set$height > x, "Male", "Female") %>% 
+         factor(levels = c("Female", "Male"))
+     list(method = "Height cutoff",
+          cutoff = x, 
+          FPR = 1-specificity(y_hat, test_set$sex),
+          TPR = sensitivity(y_hat, test_set$sex))
+ }) %>%
+     ggplot(aes(FPR, TPR, label = cutoff)) +
+     geom_line() +
+     geom_point() +
+     geom_text_repel(nudge_x = 0.01, nudge_y = -0.01)
> guessing <- map_df(probs, function(p){
+     y_hat <- sample(c("Male", "Female"), length(test_index), 
+                     replace = TRUE, prob=c(p, 1-p)) %>% 
+         factor(levels = c("Female", "Male"))
+     list(method = "Guess",
+          recall = sensitivity(y_hat, test_set$sex),
+          precision = precision(y_hat, test_set$sex))
+ })
> height_cutoff <- map_df(cutoffs, function(x){
+     y_hat <- ifelse(test_set$height > x, "Male", "Female") %>% 
+         factor(levels = c("Female", "Male"))
+     list(method = "Height cutoff",
+          recall = sensitivity(y_hat, test_set$sex),
+          precision = precision(y_hat, test_set$sex))
+ })
> bind_rows(guessing, height_cutoff) %>%
+     ggplot(aes(recall, precision, color = method)) +
+     geom_line() +
+     geom_point()
Warning messages:
1: Removed 2 row(s) containing missing values (geom_path). 
2: Removed 2 rows containing missing values (geom_point). 
> guessing <- map_df(probs, function(p){
+     y_hat <- sample(c("Male", "Female"), length(test_index), replace = TRUE, 
+                     prob=c(p, 1-p)) %>% 
+         factor(levels = c("Male", "Female"))
+     list(method = "Guess",
+          recall = sensitivity(y_hat, relevel(test_set$sex, "Male", "Female")),
+          precision = precision(y_hat, relevel(test_set$sex, "Male", "Female")))
+ })
> 
> height_cutoff <- map_df(cutoffs, function(x){
+     y_hat <- ifelse(test_set$height > x, "Male", "Female") %>% 
+         factor(levels = c("Male", "Female"))
+     list(method = "Height cutoff",
+          recall = sensitivity(y_hat, relevel(test_set$sex, "Male", "Female")),
+          precision = precision(y_hat, relevel(test_set$sex, "Male", "Female")))
+ })
> bind_rows(guessing, height_cutoff) %>%
+     ggplot(aes(recall, precision, color = method)) +
+     geom_line() +
+     geom_point()